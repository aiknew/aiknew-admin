enum StorageType {
  LOCAL
  S3
}

enum UploadFileChannel {
  ADMIN
  WEB
  S3_CONSOLE
}

enum FileStatus {
  NORMAL
  MISSING
}

enum FileStorageStatus {
  NORMAL
  DISABLED
  DISABLED_UPLOAD
}

model FileStorage {
  id         String            @id @default(cuid(2))
  name       String            @db.VarChar(20)
  type       StorageType
  UploadFile UploadFile[]
  status     FileStorageStatus
  priority   Int               @default(10)
  hostname   String            @db.VarChar(100)
  accessKey  String?           @db.VarChar(50) // only s3 type
  secretKey  String?           @db.VarChar(50) // only s3 type
  endpoint   String?           @db.VarChar(50) // only s3 type
  bucket     String?           @db.VarChar(50) // only s3 type
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
}

model UploadFile {
  id              String            @id @default(cuid())
  channel         UploadFileChannel
  fileName        String            @db.VarChar(50)
  filePath        String            @db.VarChar(200)
  fileExt         String            @db.VarChar(10)
  fileSize        Int
  status          FileStatus
  mime            String            @db.VarChar(50)
  originalName    String            @db.VarChar(255)
  order           Int               @default(10)
  groupId         String            @default("0")
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  deletedAt       DateTime?
  uploader        AdminUser         @relation(fields: [uploaderId], references: [id])
  uploaderId      String
  storage         FileStorage       @relation(fields: [fileStorageId], references: [id])
  fileStorageId   String
  articleCoverImg Article[]

  @@unique([originalName, groupId, fileStorageId])
}
